"""plot_ik_plan.py

Quick visualiser for ik_plan.csv files generated by the diagnostic logger.

Usage examples
--------------
# Plot a specific file
python diagnostics/plot_ik_plan.py diagnostics/open_loop/20250629_145802/ik_plan.csv

# If run with no arguments it will automatically locate the most recent
# ik_plan.csv in the diagnostics folder and plot that.

Outputs
~~~~~~~
Two PNGs are saved in the same directory as the CSV:
• angles.png – all joint angles vs. step index
• xyz.png    – Cartesian XYZ path
"""
from __future__ import annotations

import sys
from pathlib import Path

import numpy as np
import pandas as pd
import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt

def find_latest_csv() -> Path | None:
    diag_dir = Path("diagnostics")
    if not diag_dir.exists():
        return None
    csv_files = list(diag_dir.rglob("ik_plan.csv")) + list(diag_dir.rglob("ik_plan_*.csv"))
    if not csv_files:
        return None
    return max(csv_files, key=lambda p: p.stat().st_mtime)

def main(csv_path: Path):
    if not csv_path.exists():
        print(f"ERROR: File not found: {csv_path}")
        sys.exit(1)

    df = pd.read_csv(csv_path)
    joint_cols = [c for c in df.columns if c.startswith("J")]

    out_dir = csv_path.parent
    # 1. Joint angles plot
    plt.figure(figsize=(10,4))
    for col in joint_cols:
        plt.plot(df.index, df[col], label=f"raw_{col}")

    # Overlay smoothed path if available
    joint_path_csv = csv_path.parent / "joint_path.csv"
    if joint_path_csv.exists():
        df_smooth = pd.read_csv(joint_path_csv)
        for col in joint_cols:
            if col in df_smooth.columns:
                plt.plot(df_smooth.index, df_smooth[col], '--', label=f"smooth_{col}")

    plt.xlabel("Step index")
    plt.ylabel("Angle (rad)")
    plt.title("Joint Angles vs. Step")
    plt.legend(ncol=3)
    plt.tight_layout()
    angle_png = out_dir / "ik_plan_angles.png"
    plt.savefig(angle_png)
    plt.close()

    # 2. Cartesian XYZ plot
    plt.figure(figsize=(10,4))
    for axis, col in zip(["X","Y","Z"],["target_x","target_y","target_z"]):
        if col in df.columns:
            plt.plot(df.index, df[col], label=axis)
    plt.xlabel("Step index")
    plt.ylabel("Position (m)")
    plt.title("Cartesian Path (XYZ)")
    plt.legend()
    plt.tight_layout()
    xyz_png = out_dir / "xyz.png"
    plt.savefig(xyz_png)
    plt.close()

    print(f"Plots saved to {angle_png} and {xyz_png}")

if __name__ == "__main__":
    if len(sys.argv) > 1:
        csv_file = Path(sys.argv[1])
    else:
        latest = find_latest_csv()
        if latest is None:
            print("No ik_plan.csv files found in diagnostics directory.")
            sys.exit(1)
        csv_file = latest
        print(f"Using latest CSV: {csv_file}")
    main(csv_file) 